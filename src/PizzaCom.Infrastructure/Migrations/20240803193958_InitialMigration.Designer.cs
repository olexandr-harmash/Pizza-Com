// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PizzaCom.Infrastructure;

#nullable disable

namespace PizzaCom.Infrastructure.Migrations
{
    [DbContext(typeof(PizzaComContext))]
    [Migration("20240803193958_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("pizza_com")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("blueprintseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("ingredientseq")
                .IncrementsBy(10);

            modelBuilder.HasSequence("recipeseq")
                .IncrementsBy(10);

            modelBuilder.Entity("PizzaCom.Domain.AggregatesModel.IngredientType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("ingredient_type", "pizza_com");
                });

            modelBuilder.Entity("PizzaCom.Domain.AggregatesModel.RecipeType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("recipe_type", "pizza_com");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.BlueprintEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "blueprintseq");

                    b.Property<decimal>("BaseCost")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("blueprint", "pizza_com");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.IngredientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "ingredientseq");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<int>("IngredientTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientTypeId");

                    b.ToTable("ingredient", "pizza_com");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.RecipeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "recipeseq");

                    b.Property<int>("BlueprintId")
                        .HasColumnType("integer");

                    b.Property<int>("IngredientId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeTypeId");

                    b.ToTable("recipe", "pizza_com");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.IngredientEntity", b =>
                {
                    b.HasOne("PizzaCom.Domain.AggregatesModel.IngredientType", "Type")
                        .WithMany()
                        .HasForeignKey("IngredientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.RecipeEntity", b =>
                {
                    b.HasOne("PizzaCom.Infrastructure.Models.BlueprintEntity", "Blueprint")
                        .WithMany("Recipes")
                        .HasForeignKey("BlueprintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaCom.Infrastructure.Models.IngredientEntity", "Ingredient")
                        .WithMany("Recipe")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaCom.Domain.AggregatesModel.RecipeType", "Type")
                        .WithMany()
                        .HasForeignKey("RecipeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blueprint");

                    b.Navigation("Ingredient");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.BlueprintEntity", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("PizzaCom.Infrastructure.Models.IngredientEntity", b =>
                {
                    b.Navigation("Recipe");
                });
#pragma warning restore 612, 618
        }
    }
}
